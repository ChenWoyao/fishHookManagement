{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport Cookies from 'js-cookie';\nexport function serialize(obj, prefix) {\n  var str = [];\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      var k = prefix ? \"\".concat(prefix, \"[\").concat(key, \"]\") : p;\n      var v = obj[key];\n      str.push(_typeof(v) === 'object' ? serialize(v, k) : \"\".concat(encodeURIComponent(k), \"=\").concat(encodeURIComponent(v)));\n    }\n  }\n\n  return str.join('&');\n}\nexport function getToken(TokenKey) {\n  return Cookies.get(TokenKey);\n}\nexport function setToken(TokenKey, token) {\n  return Cookies.set(TokenKey, token);\n}\nexport function removeToken(TokenKey) {\n  return Cookies.remove(TokenKey);\n}\n/**\n * @export\n * @param {*} date    Date类型\n * @param {*} cFormat 任何你想要的格式\n * @returns\n */\n\nexport function parseDate(date, cFormat) {\n  var format = cFormat || 'y-m-d h:i:s';\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var time_str = format.replace(/([ymdhisa])+/g, function (result, key) {\n    var value = formatObj[key];\n\n    if (key === 'a') {\n      return ['日', '一', '二', '三', '四', '五', '六'][value];\n    }\n\n    return value.toString().padStart(2, '0');\n  });\n  return time_str;\n}\n/**\n * 搜索框搜索输入。只需用户最后一次输入完，再发送请求\n * 手机号、邮箱验证输入检测\n * 窗口大小Resize。只需窗口调整完成后，计算窗口大小。防止重复渲染\n * @param {*} func\n * @param {*} delay\n * @param {*} immediate\n * @returns\n */\n\nexport var debounce = function debounce(func, delay, immediate) {\n  var later = null;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!later && immediate) {\n      func.apply(void 0, args);\n    }\n\n    later && clearTimeout(later);\n    later = setTimeout.apply(void 0, [func, delay].concat(args));\n  };\n}; // 函数节流：\n\n/**\n * 滚动加载，加载更多或滚到底部监听\n * 谷歌搜索框，搜索联想功能\n * 高频点击提交，表单重复提交\n * @param {*} func\n * @param {*} delay\n * @returns\n */\n\nexport var throttle = function throttle(func, delay) {\n  var later = null;\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (later) return;\n    later = setTimeout(function () {\n      func.apply(void 0, args);\n      later = null;\n    }, delay);\n  };\n};\n/**\n * eventEmitter实现\n */\n\nexport var EventEmitter = /*#__PURE__*/function () {\n  function EventEmitter(events) {\n    _classCallCheck(this, EventEmitter);\n\n    this.events = events || {};\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"subscribe\",\n    value: function subscribe(name, cb) {\n      var _this = this;\n\n      this.events[name] || (this.events[name] = []).push(cb);\n      return {\n        unsubscribe: function unsubscribe() {\n          _this.events[name] && _this.events[name].splice(_this.events[name].indexOf(cb) >>> 0, 1);\n        }\n      };\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(name) {\n      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        args[_key3 - 1] = arguments[_key3];\n      }\n\n      (this.events[name] || []).forEach(function (fn) {\n        return fn.apply(void 0, args);\n      });\n    }\n  }]);\n\n  return EventEmitter;\n}();\n/**\n * compose实现\n * compose (widthData(), widhtLogger())(Component)\n*/\n\nexport var compose = function compose() {\n  for (var _len4 = arguments.length, fns = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    fns[_key4] = arguments[_key4];\n  }\n\n  return function (Component) {\n    return fns.reduceRight(function (Component, fn) {\n      return fn(Component);\n    }, Component);\n  };\n};\n/**\n * 函数柯里化\n */\n\nexport var curring = function curring(func) {\n  return function () {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    if (func.length <= args.length) {\n      return fns.apply(void 0, args);\n    }\n\n    return function () {\n      for (var _len6 = arguments.length, args2 = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args2[_key6] = arguments[_key6];\n      }\n\n      return curring(func).apply(void 0, args.concat(args2));\n    };\n  };\n};\n/**\n * 获取本月有多少天\n */\n\nexport var getCurrentMonthDays = function getCurrentMonthDays() {\n  var date = new Date();\n  var month = date.getMonth() + 1;\n  var year = date.getFullYear();\n  return new Date(year, month, 0).getDate();\n};\n/**\n * 创建num个[min, max]区间的随机值\n * @param {个数} num\n * @param {最小值} min\n * @param {最大值} max\n * @returns\n */\n\nexport var createRandomNums = function createRandomNums(num, min, max) {\n  var result = [];\n\n  for (var i = 0; i < num; i++) {\n    var random = Math.random();\n    var space = max - min;\n    result.push(Math.ceil(space * random) + min);\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/Users/chen/Desktop/fishHookManagement/fish_web/src/utils/help.js"],"names":["Cookies","serialize","obj","prefix","str","key","hasOwnProperty","k","p","v","push","encodeURIComponent","join","getToken","TokenKey","get","setToken","token","set","removeToken","remove","parseDate","date","cFormat","format","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","time_str","replace","result","value","toString","padStart","debounce","func","delay","immediate","later","args","clearTimeout","setTimeout","throttle","EventEmitter","events","name","cb","unsubscribe","splice","indexOf","forEach","fn","compose","fns","Component","reduceRight","curring","length","args2","getCurrentMonthDays","Date","month","year","createRandomNums","num","min","max","random","Math","space","ceil"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie'\n\nexport function serialize(obj, prefix) {\n    const str = []\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            const k = prefix ? `${prefix}[${key}]` : p\n            const v = obj[key]\n            str.push(typeof v === 'object' ? serialize(v, k) : `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        }\n    }\n    return str.join('&')\n}\n\nexport function getToken(TokenKey) {\n    return Cookies.get(TokenKey)\n}\n\nexport function setToken(TokenKey, token) {\n    return Cookies.set(TokenKey, token)\n}\n\nexport function removeToken(TokenKey) {\n    return Cookies.remove(TokenKey)\n}\n\n/**\n * @export\n * @param {*} date    Date类型\n * @param {*} cFormat 任何你想要的格式\n * @returns\n */\nexport function parseDate(date, cFormat) {\n    let format = cFormat || 'y-m-d h:i:s';\n    let formatObj = {\n        y: date.getFullYear(),\n        m: date.getMonth() + 1,\n        d: date.getDate(),\n        h: date.getHours(),\n        i: date.getMinutes(),\n        s: date.getSeconds(),\n        a: date.getDay()\n    };\n    const time_str = format.replace(/([ymdhisa])+/g, (result, key) => {\n        let value = formatObj[key];\n        if (key === 'a') {\n            return ['日', '一', '二', '三', '四', '五', '六'][value]\n        }\n        return value.toString().padStart(2, '0');\n    });\n    return time_str;\n}\n/**\n * 搜索框搜索输入。只需用户最后一次输入完，再发送请求\n * 手机号、邮箱验证输入检测\n * 窗口大小Resize。只需窗口调整完成后，计算窗口大小。防止重复渲染\n * @param {*} func\n * @param {*} delay\n * @param {*} immediate\n * @returns\n */\nexport const debounce = (func, delay, immediate) => {\n    let later = null\n    return (...args) => {\n        if (!later && immediate) {\n            func(...args)\n        }\n        later && clearTimeout(later)\n        later = setTimeout(func, delay, ...args)\n    }\n}\n\n// 函数节流：\n/**\n * 滚动加载，加载更多或滚到底部监听\n * 谷歌搜索框，搜索联想功能\n * 高频点击提交，表单重复提交\n * @param {*} func\n * @param {*} delay\n * @returns\n */\nexport const throttle = (func, delay) => {\n    let later = null\n    return (...args) => {\n        if (later) return\n        later = setTimeout(() => {\n            func(...args)\n            later = null\n        }, delay)\n    }\n}\n\n/**\n * eventEmitter实现\n */\nexport class EventEmitter {\n    constructor(events) {\n        this.events = events || {}\n    }\n    subscribe(name, cb) {\n        (this.events[name]) || (this.events[name] = []).push(cb)\n        return {\n            unsubscribe: () => {\n                this.events[name] && this.events[name].splice(this.events[name].indexOf(cb) >>> 0, 1)\n            }\n        }\n    }\n    emit(name, ...args) {\n        (this.events[name] || []).forEach(fn => fn(...args))\n    }\n}\n\n/**\n * compose实现\n * compose (widthData(), widhtLogger())(Component)\n*/\n\nexport const compose = (...fns) => (Component) => {\n    return fns.reduceRight((Component, fn) => {\n        return fn(Component)\n    }, Component)\n}\n\n/**\n * 函数柯里化\n */\nexport const curring = (func) => (...args) => {\n    if (func.length <= args.length) {\n        return fns(...args)\n    }\n    return (...args2) => curring(func)(...args, ...args2)\n}\n\n/**\n * 获取本月有多少天\n */\n\nexport const getCurrentMonthDays = () => {\n    const date = new Date()\n    const month = date.getMonth() + 1\n    const year = date.getFullYear()\n    return new Date(year, month, 0).getDate()\n}\n\n/**\n * 创建num个[min, max]区间的随机值\n * @param {个数} num\n * @param {最小值} min\n * @param {最大值} max\n * @returns\n */\nexport const createRandomNums = (num, min, max) => {\n    const result = []\n    for (let i = 0; i < num; i++) {\n        const random = Math.random()\n        const space = max - min\n        result.push(Math.ceil(space * random) + min)\n    }\n    return result\n}\n"]},"metadata":{},"sourceType":"module"}