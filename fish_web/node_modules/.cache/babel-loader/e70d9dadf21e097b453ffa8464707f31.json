{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";\nimport _Array$from from \"@babel/runtime-corejs3/core-js-stable/array/from\";\nimport _Symbol from \"@babel/runtime-corejs3/core-js-stable/symbol\";\nimport _getIteratorMethod from \"@babel/runtime-corejs3/core-js/get-iterator-method\";\nimport _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\n  var n = _sliceInstanceProperty(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);\n\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof _Symbol !== \"undefined\" && _getIteratorMethod(arr) || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}\n\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { HashRouter } from \"react-router-dom\";\nimport { renderRoutes } from \"react-router-config\";\nimport Routes from './routes';\nimport { Store as GlobalStore, useReduxHook as useGlobalReduxHook } from './hook.redux/global';\n\nfunction GlobalProvider(_ref) {\n  var children = _ref.children;\n\n  var _useGlobalReduxHook = useGlobalReduxHook(),\n      _useGlobalReduxHook2 = _slicedToArray(_useGlobalReduxHook, 2),\n      state = _useGlobalReduxHook2[0],\n      dispatch = _useGlobalReduxHook2[1];\n\n  return /*#__PURE__*/React.createElement(GlobalStore.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    }\n  }, children);\n}\n\nvar App = function App() {\n  return /*#__PURE__*/React.createElement(GlobalProvider, null, /*#__PURE__*/React.createElement(HashRouter, null, /*#__PURE__*/React.createElement(\"div\", null, renderRoutes(Routes))));\n};\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}