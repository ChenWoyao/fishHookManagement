{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport styles from './index.module.scss';\nimport './index.css';\nimport { Form, Input, Button, Select, Row, Col } from 'antd';\nimport { setLineOption, setPieOption } from './option';\nimport { parseDate, getCurrentMonthDays, createRandomNums, debounce } from '../../utils/help';\nimport StatusTable from './statusTable';\nimport ProductionTable from './productionTable';\nimport * as echarts from 'echarts';\nvar log = console.log.bind(console);\n\nvar createDateList = function createDateList() {\n  var days = getCurrentMonthDays();\n  var date = new Date();\n  var month = date.getMonth() + 1;\n  var year = date.getFullYear();\n  return Array.from(new Array(days), function (day, index) {\n    var value = index + 1;\n    return \"\".concat(year, \"-\").concat(month.toString().padStart(2, '0'), \"-\").concat(value.toString().padStart(2, '0'));\n  });\n};\n\nvar createPieData = function createPieData() {\n  return [{\n    name: '苍蝇钩',\n    value: 30\n  }, {\n    name: '蚯蚓钩',\n    value: 40\n  }, {\n    name: '蚊子钩',\n    value: 310\n  }, {\n    name: '蜈蚣钩',\n    value: 80\n  }, {\n    name: '虫子钩',\n    value: 60\n  }];\n};\n\nvar ProductionStaffHome = function ProductionStaffHome() {\n  var lineRef = useRef();\n  var pieRef = useRef();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var Option = Select.Option;\n  var dateList = createDateList();\n  var dataList = createRandomNums(getCurrentMonthDays(), 0, 150);\n  var pieDataList = createPieData();\n  useEffect(function () {\n    var lineChart = echarts.init(lineRef.current, null, {\n      height: 400\n    });\n    var pieChart = echarts.init(pieRef.current, null, {\n      height: 300\n    });\n    DrawLine(lineChart, dateList, dataList);\n    DrawPie(pieChart, pieDataList);\n    var withResizeChart = debounce(function () {\n      lineChart === null || lineChart === void 0 ? void 0 : lineChart.resize({\n        width: 'auto',\n        height: 'auto'\n      });\n      pieChart === null || pieChart === void 0 ? void 0 : pieChart.resize({\n        width: 'auto',\n        height: 'auto'\n      });\n    }, 100, false);\n    window.addEventListener('resize', withResizeChart);\n    return function () {\n      lineChart.dispose();\n      pieChart.dispose();\n      window.removeEventListener('resize', withResizeChart);\n    };\n  }, [dateList, dataList]);\n\n  var onFinish = function onFinish(values) {};\n\n  var onReset = function onReset() {\n    form.resetFields();\n  };\n\n  var DrawLine = function DrawLine(chart, dateList, dataList) {\n    chart.clear();\n    chart.setOption(setLineOption(dateList, dataList));\n  };\n\n  var DrawPie = function DrawPie(chart, datalist) {\n    chart.clear();\n    chart.setOption(setPieOption(datalist));\n  };\n\n  var onProductionChange = function onProductionChange(value) {\n    switch (value) {\n      case 'male':\n        // form.setFieldsValue({\n        //   note: 'Hi, man!',\n        // });\n        return;\n\n      case 'female':\n        return;\n\n      case 'other':\n        return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['container']\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['content-container']\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles['chart-label']\n  }, \"\\u672C\\u6708\\u7684\\u751F\\u4EA7\\u6570\\u636E\\u663E\\u793A:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['linebox'],\n    ref: lineRef\n  }, \"linebox\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles['chart-label'],\n    style: {\n      marginTop: '100px'\n    }\n  }, \"\\u672C\\u6708\\u4E2A\\u4EBA\\u751F\\u4EA7\\u7684\\u4EA7\\u54C1\\u6570\\u636E\\u663E\\u793A:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['piebox'],\n    ref: pieRef\n  }, \"piebox\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles['form-label'],\n    style: {\n      marginTop: '40px'\n    }\n  }, \"\\u63D0\\u4EA4\\u4E00\\u4E2A\\u4EA7\\u54C1\\u7684\\u751F\\u4EA7\\u91CF:\"), /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    onFinish: onFinish,\n    className: styles['myForm']\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"type\",\n    label: \"\\u4EA7\\u54C1\",\n    className: styles['myForm-item'],\n    rules: [{\n      required: true\n    }]\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"\\u9009\\u62E9\\u4E00\\u4E2A\\u4EA7\\u54C1\",\n    onChange: onProductionChange,\n    className: styles['myForm-item__select'],\n    allowClear: true\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"male\"\n  }, \"male\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"female\"\n  }, \"female\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"other\"\n  }, \"other\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"count\",\n    label: \"\\u6570\\u91CF\",\n    className: styles['myForm-item'],\n    rules: [{\n      required: true\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: styles['myForm-item__input']\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    className: styles['myForm-item--last']\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: styles['myForm-item__button']\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"button\",\n    onClick: onReset,\n    className: styles['myForm-item__button']\n  }, \"Reset\"))), /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles['chart-label']\n  }, \"\\u4E2A\\u4EBA\\u7684\\u5168\\u90E8\\u751F\\u4EA7\\u6570\\u636E\\u663E\\u793A:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['production-table']\n  }, /*#__PURE__*/React.createElement(ProductionTable, {\n    dataSource: []\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles['chart-label']\n  }, \"\\u4E2A\\u4EBA\\u63D0\\u4EA4\\u7684\\u751F\\u4EA7\\u8BA2\\u5355\\u65E5\\u5FD7:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['status-table']\n  }, /*#__PURE__*/React.createElement(StatusTable, {\n    dataSource: []\n  }))));\n};\n\nexport default /*#__PURE__*/React.memo(ProductionStaffHome);","map":{"version":3,"sources":["/Users/chen/Desktop/fishHookManagement/fish_web/src/pages/ProductionStaff/index.js"],"names":["React","useRef","useEffect","useState","styles","Form","Input","Button","Select","Row","Col","setLineOption","setPieOption","parseDate","getCurrentMonthDays","createRandomNums","debounce","StatusTable","ProductionTable","echarts","log","console","bind","createDateList","days","date","Date","month","getMonth","year","getFullYear","Array","from","day","index","value","toString","padStart","createPieData","name","ProductionStaffHome","lineRef","pieRef","useForm","form","Option","dateList","dataList","pieDataList","lineChart","init","current","height","pieChart","DrawLine","DrawPie","withResizeChart","resize","width","window","addEventListener","dispose","removeEventListener","onFinish","values","onReset","resetFields","chart","clear","setOption","datalist","onProductionChange","marginTop","required","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport styles from './index.module.scss'\nimport './index.css'\nimport { Form, Input, Button, Select, Row, Col } from 'antd'\nimport { setLineOption, setPieOption } from './option'\nimport { parseDate, getCurrentMonthDays, createRandomNums, debounce } from '../../utils/help'\nimport StatusTable from './statusTable'\nimport ProductionTable from './productionTable'\nimport * as echarts from 'echarts'\n\nconst log = console.log.bind(console)\n\nconst createDateList = () => {\n    const days = getCurrentMonthDays()\n    const date = new Date()\n    const month = date.getMonth() + 1\n    const year = date.getFullYear()\n    return Array.from(new Array(days), (day, index) => {\n        let value = index + 1\n        return `${year}-${month.toString().padStart(2, '0')}-${value.toString().padStart(2, '0')}`\n    })\n}\n\nconst createPieData = () => {\n    return [\n        {\n            name: '苍蝇钩',\n            value: 30,\n        },\n        {\n            name: '蚯蚓钩',\n            value: 40,\n        },\n        {\n            name: '蚊子钩',\n            value: 310,\n        },\n        {\n            name: '蜈蚣钩',\n            value: 80,\n        },\n        {\n            name: '虫子钩',\n            value: 60,\n        },\n    ]\n}\n\n\nconst ProductionStaffHome = () => {\n    const lineRef = useRef()\n    const pieRef = useRef()\n    const [form] = Form.useForm()\n    const { Option } = Select\n    const dateList = createDateList()\n    const dataList = createRandomNums(getCurrentMonthDays(), 0, 150)\n    const pieDataList = createPieData()\n\n    useEffect(() => {\n        const lineChart = echarts.init(lineRef.current, null, {\n            height: 400,\n        })\n        const pieChart = echarts.init(pieRef.current, null, {\n            height: 300,\n        })\n        DrawLine(lineChart, dateList, dataList)\n        DrawPie(pieChart, pieDataList)\n\n        const withResizeChart = debounce(() => {\n            lineChart?.resize({\n                width: 'auto',\n                height: 'auto',\n            })\n            pieChart?.resize({\n                width: 'auto',\n                height: 'auto',\n            })\n        }, 100, false)\n\n        window.addEventListener('resize', withResizeChart)\n\n        return () => {\n            lineChart.dispose()\n            pieChart.dispose()\n            window.removeEventListener('resize', withResizeChart)\n        }\n    }, [dateList, dataList])\n\n\n    const onFinish = (values) => {\n\n    }\n\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const DrawLine = (chart, dateList, dataList) => {\n        chart.clear()\n        chart.setOption(setLineOption(dateList, dataList))\n    }\n\n    const DrawPie = (chart, datalist) => {\n        chart.clear()\n        chart.setOption(setPieOption(datalist))\n    }\n\n    const onProductionChange = (value) => {\n        switch (value) {\n            case 'male':\n                // form.setFieldsValue({\n                //   note: 'Hi, man!',\n                // });\n                return;\n\n            case 'female':\n                return;\n\n            case 'other':\n                return;\n        }\n    };\n\n    return (\n        <div className={styles['container']}>\n            <div className={styles['content-container']}>\n                <h3 className={styles['chart-label']}>本月的生产数据显示:</h3>\n                <div className={styles['linebox']} ref={lineRef}>linebox</div>\n                <h3 className={styles['chart-label']} style={{ marginTop: '100px' }}>\n                    本月个人生产的产品数据显示:\n                </h3>\n                <div className={styles['piebox']} ref={pieRef}>piebox</div>\n                <h3 className={styles['form-label']} style={{ marginTop: '40px' }}>提交一个产品的生产量:</h3>\n                <Form form={form} onFinish={onFinish} className={styles['myForm']}>\n                    <Form.Item\n                        name=\"type\"\n                        label=\"产品\"\n                        className={styles['myForm-item']}\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Select\n                            placeholder=\"选择一个产品\"\n                            onChange={onProductionChange}\n                            className={styles['myForm-item__select']}\n                            allowClear\n                        >\n                            <Option value=\"male\">male</Option>\n                            <Option value=\"female\">female</Option>\n                            <Option value=\"other\">other</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"count\"\n                        label=\"数量\"\n                        className={styles['myForm-item']}\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input className={styles['myForm-item__input']} />\n                    </Form.Item>\n                    <Form.Item className={styles['myForm-item--last']}>\n                        <Button type=\"primary\" htmlType=\"submit\" className={styles['myForm-item__button']}>\n                            Submit\n                        </Button>\n                        <Button htmlType=\"button\" onClick={onReset} className={styles['myForm-item__button']}>\n                            Reset\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <h3 className={styles['chart-label']}>个人的全部生产数据显示:</h3>\n                <div className={styles['production-table']}>\n                    <ProductionTable dataSource={[]} />\n                </div>\n                <h3 className={styles['chart-label']}>个人提交的生产订单日志:</h3>\n                <div className={styles['status-table']}>\n                    <StatusTable dataSource={[]} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(ProductionStaffHome)\n"]},"metadata":{},"sourceType":"module"}